<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEVBOSJFQTlkRUE5lUVB
        ObZFQTnFRUE5xUVBObZFQTmVRUE5ZEVBOSIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAREE4BkVBOWNFQTnMRUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOcxFQTljRUE4BgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEVBOU1FQTndRUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTndRUE5TQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERBOQdFQTmaRUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5mkVBOQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEQDgNRUE5wEVB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5wEVBOQ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAREE5B0VB
        OcBFQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5wEVBOQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABFQTmaRUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5mgAAAAAAAAAAAAAAAAAA
        AAAAAAAARUE5TUVBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5TQAA
        AAAAAAAAAAAAAERBOAZFQTndRUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/8bEwv/i4eD/4uHg/+Lh
        4P/i4eD/4uHg/+Lh4P/i4eD/4uHg/+Lh4P/i4eD/xsXC/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTndRUE4BgAAAAAAAAAARUE5Y0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/3t3b////
        ///////////////////29vX/9vb1///////////////////////e3dv/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTljAAAAAAAAAABFQTnMRUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of/e3dv////////////29vX/g4F7/0dDO/9HQzv/g4F7//b29f///////////97d2/9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOcwAAAAARUE5IkVBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/97d2////////////46Mh/9FQTn/hYJ9/0tIQP9FQTn/joyH////////////3t3b/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOSJFQTlkRUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/3t3b////////////U09I/4SBfP/g4N//x8bD/0hEPP9TT0j/////////
        ///e3dv/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5ZEVBOZVFQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf/e3dv///////////9cWFH/W1hR/0ZCOv+MioX/trSx/1xY
        Uf///////////97d2/9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTmVRUE5tkVB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/97d2////////////62rp/9FQTn/RUE5/0VB
        Of9ZVU7/raun////////////3t3b/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        ObZFQTnFRUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/3t3b/////////////////7a0
        sf9wbWf/cG1n/7a0sf/////////////////e3dv/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5xUVBOcVFQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf/e3dv/////////
        /////////////////////////////////////////////97d2/9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTnFRUE5tkVBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/62r
        p//x8PD//////9nY1v/DwsD/w8LA/8PCwP/DwsD/2djW///////x8PD/raun/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBObZFQTmVRUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/9LRz///////iIWA/0VBOf9FQTn/RUE5/0VBOf+IhYD//////9LRz/9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5lUVBOWRFQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/zs3L//////+Qjon/RUE5/0VBOf9FQTn/RUE5/5COif//////zs3L/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTlkRUE5IkVBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf+rqab//////9bV0/9IRD3/RUE5/0VBOf9IRD3/1tXT////
        //+rqab/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOSIAAAAARUE5zEVB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/19bVf/5+fn//////9PS0P+Fg33/hYJ9/9PS
        0P//////+fn5/19bVf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTnMAAAAAAAA
        AABFQTljRUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/4OAe//6+vn/////////
        //////////////r6+f+DgHv/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        OWMAAAAAAAAAAERBOAZFQTndRUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/2Jf
        WP+0sq//29vZ/9vb2f+0sq//Yl9Y/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTndREE4BgAAAAAAAAAAAAAAAEVBOU1FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOU0AAAAAAAAAAAAAAAAAAAAAAAAAAEVBOZpFQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTmaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAREE5B0VBOcBFQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5wERBOQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAREA4DUVB
        OcBFQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOcBEQDgNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAREE5B0VBOZpFQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTmaREE5BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEVBOU1FQTndRUE5/0VBOf9FQTn/RUE5/0VBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTndRUE5TQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERBOAZFQTljRUE5zEVBOf9FQTn/RUE5/0VB
        Of9FQTn/RUE5/0VBOf9FQTn/RUE5/0VBOf9FQTnMRUE5Y0RBOAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARUE5IkVB
        OWRFQTmVRUE5tkVBOcVFQTnFRUE5tkVBOZVFQTlkRUE5IgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+AH//8AAP/+AAB/+AAAH/AAAA/gAAAH4AAAB8AAAAOAAAABgAAAAYAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAYAAAAGAAAABwAAAA+AA
        AAfgAAAH8AAAD/gAAB/+AAB//wAA///gB/8=
</value>
  </data>
</root>